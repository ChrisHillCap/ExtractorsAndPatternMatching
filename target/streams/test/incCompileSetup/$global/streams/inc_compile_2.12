format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.3
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> /Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/ExtractorOnUserMatchingSpec.class
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> /Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/IsOddIsEvenSpec.class
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> /Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/PatternMatchingBetweenCaseClassesDogAndCatSpec.class
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> /Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/UserSpec.class
binary dependencies:
15 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> /Users/chill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> /Users/chill/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> /Users/chill/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> /Users/chill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> /Users/chill/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> /Users/chill/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> /Users/chill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> /Users/chill/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> /Users/chill/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> /Users/chill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> /Users/chill/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> /Users/chill/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
15 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Extractor$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> User
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> User$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> isEven$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> isOdd$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Cat
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Cat$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Dog
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Dog$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> PatternMatchingDifferentCaseClasses$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Extractor$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> User
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> User$
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> UserWithOverridedUnapply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> UserWithOverridedUnapply$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
4 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> ExtractorOnUserMatchingSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> IsOddIsEvenSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> PatternMatchingBetweenCaseClassesDogAndCatSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> UserSpec
used names:
226 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> +
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> <byname>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> <init>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> <repeated>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> A
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Any
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> AnyRef
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> AnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Assertion
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Boolean
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> CharSequence
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Extractor
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> ExtractorOnUserMatchingSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Int
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> List
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> MatchError
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Matchers
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Nothing
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Option
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Position
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Predef
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Prettifier
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Some
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> String
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> StringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> StringVerbBlockRegistration
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> T
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> T0
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Tuple5
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> Unit
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> User
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> WordSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> WordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> _1
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> _5
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> a
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> apply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> asInstanceOf
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> collection
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> contains
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> convertToAnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> convertToStringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> convertToWordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> default
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> e
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> get
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> getMessage
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> here
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> immutable
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> in
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> isEmpty
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> isInstanceOf
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> ne
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> newUser
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> org
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> package
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> println
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> scala
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> scalactic
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> scalatest
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> should
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> shouldBe
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> source
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> subjectRegistrationFunction
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> unapply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> unary_!
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> value
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> ::
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> <byname>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> <init>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> <repeated>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> A
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Any
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> AnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Assertion
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> B
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Boolean
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> CharSequence
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Int
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> IsOddIsEvenSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> List
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> MatchError
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Matchers
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Nil
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Nothing
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Option
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Position
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Predef
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Prettifier
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> String
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> StringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> StringVerbBlockRegistration
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> T
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> Unit
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> WordSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> WordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> a
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> apply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> collection
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> contains
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> convertToAnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> convertToStringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> convertToWordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> default
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> e
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> get
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> getMessage
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> here
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> immutable
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> in
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> isEmpty
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> isEven
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> isOdd
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> listInts
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> listIntsOdd
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> org
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> package
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> println
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> scala
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> scalactic
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> scalatest
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> should
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> shouldBe
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> source
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> subjectRegistrationFunction
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> unapply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> unary_!
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> <byname>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> <init>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> A
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Any
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> AnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Assertion
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Boolean
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Cat
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Dog
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Int
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Matchers
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Nothing
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Option
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> PatternMatchingBetweenCaseClassesDogAndCatSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> PatternMatchingDifferentCaseClasses
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Position
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Predef
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Prettifier
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Some
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> String
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> StringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> StringVerbBlockRegistration
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> T
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> Unit
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> WordSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> WordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> convertToAnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> convertToStringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> convertToWordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> default
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> here
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> in
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> newCat
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> newDog
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> org
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> package
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> patternMatchingBetweenDogsAndCats
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> patternMatchingBetweenDogsAndCatsRefactored
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> scala
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> scalactic
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> scalatest
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> should
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> shouldBe
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> source
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> subjectRegistrationFunction
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> <byname>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> <init>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> <repeated>
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> A
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Any
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> AnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Assertion
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Boolean
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Extractor
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Int
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> List
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Matchers
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Nothing
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Option
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Position
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Predef
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Prettifier
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Some
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> String
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> StringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> StringVerbBlockRegistration
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> T
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> T1
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> T2
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> T3
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> T4
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> T5
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Tuple5
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> Unit
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> User
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> UserSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> UserWithOverridedUnapply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> WordSpec
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> WordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> apply
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> collection
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> convertToAnyShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> convertToStringShouldWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> convertToWordSpecStringWrapper
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> default
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> here
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> immutable
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> in
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> newUser
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> org
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> package
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> scala
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> scalactic
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> scalatest
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> should
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> shouldBe
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> source
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> subjectRegistrationFunction
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> unapply
product stamps:
4 items
/Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/ExtractorOnUserMatchingSpec.class -> lastModified(1505921753000)
/Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/IsOddIsEvenSpec.class -> lastModified(1505921753000)
/Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/PatternMatchingBetweenCaseClassesDogAndCatSpec.class -> lastModified(1505921753000)
/Users/chill/paye/ExtractorsAndPatterMatching/target/scala-2.12/test-classes/UserSpec.class -> lastModified(1505921753000)
source stamps:
4 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> hash(e3983a8c6e1b234b2c5d684532384df6d94dba68)
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> hash(c5e0b5d5cca42a59a7b836380b4a6acc23abbce5)
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> hash(acd2ecc42d5056093b3b602e7291955c3d1a1d17)
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> hash(ceb85aaed31ecad62dc5457489aaff8fde2a6c43)
binary stamps:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1475301657000)
/Users/chill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar -> lastModified(1500979666000)
/Users/chill/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar -> lastModified(1478056143000)
/Users/chill/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar -> lastModified(1478056290000)
class names:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/chill/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar -> scala.Int
/Users/chill/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar -> org.scalactic.Prettifier
/Users/chill/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar -> org.scalatest.Matchers
internal apis:
4 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> 

/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> 

/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> 

/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> 

external apis:
12 items
Cat -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvSz7SwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwOZMCjXQABm5vdGlmeXNxAH4ADIp0TLh0AAd1bmFwcGx5c3EAfgAMOr/WlXQABHdhaXRzcQB+AAwt2xEKdAAOY29weSRkZWZhdWx0JDJzcQB+AAzUuZZWdAANJGFzSW5zdGFuY2VPZnNxAH4ADFTZWD90AAxwcm9kdWN0QXJpdHlzcQB+AAy3v3UTdAAGZXF1YWxzc3EAfgAMbJZZuHQAIXBhdHRlcm5NYXRjaGluZ0JldHdlZW5Eb2dzQW5kQ2F0c3NxAH4ADAgyE2B0AAxhc0luc3RhbmNlT2ZzcQB+AAzvOSOzdAARY2F0VG9Eb2dFeHRyYWN0b3JzcQB+AAzU8mutdAAMc3luY2hyb25pemVkc3EAfgAMP8FDLXQAI1BhdHRlcm5NYXRjaGluZ0RpZmZlcmVudENhc2VDbGFzc2Vzc3EAfgAMUThI43QADSRpc0luc3RhbmNlT2ZzcQB+AAyJnzWvdAArcGF0dGVybk1hdGNoaW5nQmV0d2VlbkRvZ3NBbmRDYXRzUmVmYWN0b3JlZHNxAH4ADHjLffZ0AAhjYW5FcXVhbHNxAH4ADDQa4Tx0AA5jb3B5JGRlZmF1bHQkNHNxAH4ADPfzGGR0AA1wcm9kdWN0UHJlZml4c3EAfgAMPu01QnQACW5vdGlmeUFsbHNxAH4ADDya6qF0AANDYXRzcQB+AAy86xrvdAAMaXNJbnN0YW5jZU9mc3EAfgAMATbfyXQABjxpbml0PnNxAH4ADFq7spB0AANEb2dzcQB+AAw5WCJsdAANY2FuRmV0Y2hBQmFsbHNxAH4ADDmvFaB0AAI9PXNxAH4ADEWnmX50AAZoYXNGdXJzcQB+AAzZra0udAAFY2xvbmVzcQB+AAzKzMvVdAAGY29sb3Vyc3EAfgAM1migoHQABWJyZWVkc3EAfgAMOPXGLHQABiRpbml0JHNxAH4ADNtNRtd0AA5jb3B5JGRlZmF1bHQkM3NxAH4ADCJPUFp0AARjb3B5c3EAfgAM9bsd6nQACHRvU3RyaW5nc3EAfgAMNKvw43QAAiE9c3EAfgAMWz28tHQACGdldENsYXNzc3EAfgAMkX4m4XQADmNvcHkkZGVmYXVsdCQxc3EAfgAMG0UMTXQAAm5lc3EAfgAMhDvM23QAAmVxc3EAfgAM6RU8wnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADNaHU990AAIjI3NxAH4ADM4sWSt0AAhmaW5hbGl6ZXNxAH4ADJNbBMJ0AA5wcm9kdWN0RWxlbWVudHNxAH4ADBBZfwt0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAARzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AJXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AgnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIdzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgBmAAAAAHNxAH4AgnVyABFb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
Cat$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvSz7SwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwOZMCjXQABm5vdGlmeXNxAH4ADIp0TLh0AAd1bmFwcGx5c3EAfgAMOr/WlXQABHdhaXRzcQB+AAwt2xEKdAAOY29weSRkZWZhdWx0JDJzcQB+AAzUuZZWdAANJGFzSW5zdGFuY2VPZnNxAH4ADFTZWD90AAxwcm9kdWN0QXJpdHlzcQB+AAy3v3UTdAAGZXF1YWxzc3EAfgAMbJZZuHQAIXBhdHRlcm5NYXRjaGluZ0JldHdlZW5Eb2dzQW5kQ2F0c3NxAH4ADAgyE2B0AAxhc0luc3RhbmNlT2ZzcQB+AAzvOSOzdAARY2F0VG9Eb2dFeHRyYWN0b3JzcQB+AAzU8mutdAAMc3luY2hyb25pemVkc3EAfgAMP8FDLXQAI1BhdHRlcm5NYXRjaGluZ0RpZmZlcmVudENhc2VDbGFzc2Vzc3EAfgAMUThI43QADSRpc0luc3RhbmNlT2ZzcQB+AAyJnzWvdAArcGF0dGVybk1hdGNoaW5nQmV0d2VlbkRvZ3NBbmRDYXRzUmVmYWN0b3JlZHNxAH4ADHjLffZ0AAhjYW5FcXVhbHNxAH4ADDQa4Tx0AA5jb3B5JGRlZmF1bHQkNHNxAH4ADPfzGGR0AA1wcm9kdWN0UHJlZml4c3EAfgAMPu01QnQACW5vdGlmeUFsbHNxAH4ADDya6qF0AANDYXRzcQB+AAy86xrvdAAMaXNJbnN0YW5jZU9mc3EAfgAMATbfyXQABjxpbml0PnNxAH4ADFq7spB0AANEb2dzcQB+AAw5WCJsdAANY2FuRmV0Y2hBQmFsbHNxAH4ADDmvFaB0AAI9PXNxAH4ADEWnmX50AAZoYXNGdXJzcQB+AAzZra0udAAFY2xvbmVzcQB+AAzKzMvVdAAGY29sb3Vyc3EAfgAM1migoHQABWJyZWVkc3EAfgAMOPXGLHQABiRpbml0JHNxAH4ADNtNRtd0AA5jb3B5JGRlZmF1bHQkM3NxAH4ADCJPUFp0AARjb3B5c3EAfgAM9bsd6nQACHRvU3RyaW5nc3EAfgAMNKvw43QAAiE9c3EAfgAMWz28tHQACGdldENsYXNzc3EAfgAMkX4m4XQADmNvcHkkZGVmYXVsdCQxc3EAfgAMG0UMTXQAAm5lc3EAfgAMhDvM23QAAmVxc3EAfgAM6RU8wnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADNaHU990AAIjI3NxAH4ADM4sWSt0AAhmaW5hbGl6ZXNxAH4ADJNbBMJ0AA5wcm9kdWN0RWxlbWVudHNxAH4ADBBZfwt0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAARzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AJXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AgnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIdzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgBmAAAAAHNxAH4AgnVyABFb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
Dog -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvSz7SwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwOZMCjXQABm5vdGlmeXNxAH4ADIp0TLh0AAd1bmFwcGx5c3EAfgAMOr/WlXQABHdhaXRzcQB+AAwt2xEKdAAOY29weSRkZWZhdWx0JDJzcQB+AAzUuZZWdAANJGFzSW5zdGFuY2VPZnNxAH4ADFTZWD90AAxwcm9kdWN0QXJpdHlzcQB+AAy3v3UTdAAGZXF1YWxzc3EAfgAMbJZZuHQAIXBhdHRlcm5NYXRjaGluZ0JldHdlZW5Eb2dzQW5kQ2F0c3NxAH4ADAgyE2B0AAxhc0luc3RhbmNlT2ZzcQB+AAzvOSOzdAARY2F0VG9Eb2dFeHRyYWN0b3JzcQB+AAzU8mutdAAMc3luY2hyb25pemVkc3EAfgAMP8FDLXQAI1BhdHRlcm5NYXRjaGluZ0RpZmZlcmVudENhc2VDbGFzc2Vzc3EAfgAMUThI43QADSRpc0luc3RhbmNlT2ZzcQB+AAyJnzWvdAArcGF0dGVybk1hdGNoaW5nQmV0d2VlbkRvZ3NBbmRDYXRzUmVmYWN0b3JlZHNxAH4ADHjLffZ0AAhjYW5FcXVhbHNxAH4ADDQa4Tx0AA5jb3B5JGRlZmF1bHQkNHNxAH4ADPfzGGR0AA1wcm9kdWN0UHJlZml4c3EAfgAMPu01QnQACW5vdGlmeUFsbHNxAH4ADDya6qF0AANDYXRzcQB+AAy86xrvdAAMaXNJbnN0YW5jZU9mc3EAfgAMATbfyXQABjxpbml0PnNxAH4ADFq7spB0AANEb2dzcQB+AAw5WCJsdAANY2FuRmV0Y2hBQmFsbHNxAH4ADDmvFaB0AAI9PXNxAH4ADEWnmX50AAZoYXNGdXJzcQB+AAzZra0udAAFY2xvbmVzcQB+AAzKzMvVdAAGY29sb3Vyc3EAfgAM1migoHQABWJyZWVkc3EAfgAMOPXGLHQABiRpbml0JHNxAH4ADNtNRtd0AA5jb3B5JGRlZmF1bHQkM3NxAH4ADCJPUFp0AARjb3B5c3EAfgAM9bsd6nQACHRvU3RyaW5nc3EAfgAMNKvw43QAAiE9c3EAfgAMWz28tHQACGdldENsYXNzc3EAfgAMkX4m4XQADmNvcHkkZGVmYXVsdCQxc3EAfgAMG0UMTXQAAm5lc3EAfgAMhDvM23QAAmVxc3EAfgAM6RU8wnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADNaHU990AAIjI3NxAH4ADM4sWSt0AAhmaW5hbGl6ZXNxAH4ADJNbBMJ0AA5wcm9kdWN0RWxlbWVudHNxAH4ADBBZfwt0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAARzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AJXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AgnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIdzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgBmAAAAAHNxAH4AgnVyABFb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
Dog$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvSz7SwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwOZMCjXQABm5vdGlmeXNxAH4ADIp0TLh0AAd1bmFwcGx5c3EAfgAMOr/WlXQABHdhaXRzcQB+AAwt2xEKdAAOY29weSRkZWZhdWx0JDJzcQB+AAzUuZZWdAANJGFzSW5zdGFuY2VPZnNxAH4ADFTZWD90AAxwcm9kdWN0QXJpdHlzcQB+AAy3v3UTdAAGZXF1YWxzc3EAfgAMbJZZuHQAIXBhdHRlcm5NYXRjaGluZ0JldHdlZW5Eb2dzQW5kQ2F0c3NxAH4ADAgyE2B0AAxhc0luc3RhbmNlT2ZzcQB+AAzvOSOzdAARY2F0VG9Eb2dFeHRyYWN0b3JzcQB+AAzU8mutdAAMc3luY2hyb25pemVkc3EAfgAMP8FDLXQAI1BhdHRlcm5NYXRjaGluZ0RpZmZlcmVudENhc2VDbGFzc2Vzc3EAfgAMUThI43QADSRpc0luc3RhbmNlT2ZzcQB+AAyJnzWvdAArcGF0dGVybk1hdGNoaW5nQmV0d2VlbkRvZ3NBbmRDYXRzUmVmYWN0b3JlZHNxAH4ADHjLffZ0AAhjYW5FcXVhbHNxAH4ADDQa4Tx0AA5jb3B5JGRlZmF1bHQkNHNxAH4ADPfzGGR0AA1wcm9kdWN0UHJlZml4c3EAfgAMPu01QnQACW5vdGlmeUFsbHNxAH4ADDya6qF0AANDYXRzcQB+AAy86xrvdAAMaXNJbnN0YW5jZU9mc3EAfgAMATbfyXQABjxpbml0PnNxAH4ADFq7spB0AANEb2dzcQB+AAw5WCJsdAANY2FuRmV0Y2hBQmFsbHNxAH4ADDmvFaB0AAI9PXNxAH4ADEWnmX50AAZoYXNGdXJzcQB+AAzZra0udAAFY2xvbmVzcQB+AAzKzMvVdAAGY29sb3Vyc3EAfgAM1migoHQABWJyZWVkc3EAfgAMOPXGLHQABiRpbml0JHNxAH4ADNtNRtd0AA5jb3B5JGRlZmF1bHQkM3NxAH4ADCJPUFp0AARjb3B5c3EAfgAM9bsd6nQACHRvU3RyaW5nc3EAfgAMNKvw43QAAiE9c3EAfgAMWz28tHQACGdldENsYXNzc3EAfgAMkX4m4XQADmNvcHkkZGVmYXVsdCQxc3EAfgAMG0UMTXQAAm5lc3EAfgAMhDvM23QAAmVxc3EAfgAM6RU8wnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADNaHU990AAIjI3NxAH4ADM4sWSt0AAhmaW5hbGl6ZXNxAH4ADJNbBMJ0AA5wcm9kdWN0RWxlbWVudHNxAH4ADBBZfwt0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAARzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AJXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AgnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIdzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgBmAAAAAHNxAH4AgnVyABFb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
Extractor$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw+t5LBAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAVc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwN3aK83QABm5vdGlmeXNxAH4ADM/0fMZ0AAd1bmFwcGx5c3EAfgAMZJ1h13QABHdhaXRzcQB+AAx0iZ7ndAANJGFzSW5zdGFuY2VPZnNxAH4ADGcvRX90AAZlcXVhbHNzcQB+AAwExDFcdAAMYXNJbnN0YW5jZU9mc3EAfgAMvJaX63QADHN5bmNocm9uaXplZHNxAH4ADEqICPV0AA0kaXNJbnN0YW5jZU9mc3EAfgAMTevw9nQACUV4dHJhY3RvcnNxAH4ADN9kIiJ0AAlub3RpZnlBbGxzcQB+AAzESKpFdAAMaXNJbnN0YW5jZU9mc3EAfgAMZ+Bs0HQAAj09c3EAfgAM4hgu6nQABWNsb25lc3EAfgAM2JWu/XQACHRvU3RyaW5nc3EAfgAMGx8HqHQAAiE9c3EAfgAMVsyiHnQACGdldENsYXNzc3EAfgAMv9sHBXQAAm5lc3EAfgAMXPaBpHQAAmVxc3EAfgAM0KcOQHQAAiMjc3EAfgAMF430BnQACGZpbmFsaXplc3EAfgAMOl8yrHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgAfdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBYc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEFMAAlpbmhlcml0ZWRxAH4AQUwAB3BhcmVudHNxAH4AQXhxAH4AXXNxAH4AWHVxAH4APAAAAABzcQB+AFh1cQB+ADwAAAAAc3EAfgBYdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBcdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBcc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB1dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB2c3EAfgBpdAADQW55c3EAfgBtc3EAfgBwdXEAfgBzAAAAAnNxAH4AdXQABXNjYWxhcQB+AHx1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXp/uRoN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL2NoaWxsL3BheWUvRXh0cmFjdG9yc0FuZFBhdHRlck1hdGNoaW5nL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSeJvYLZ2rqa+5R6EAIcg2gxNuDWw==
PatternMatchingDifferentCaseClasses$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvSz7SwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAqc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwOZMCjXQABm5vdGlmeXNxAH4ADIp0TLh0AAd1bmFwcGx5c3EAfgAMOr/WlXQABHdhaXRzcQB+AAwt2xEKdAAOY29weSRkZWZhdWx0JDJzcQB+AAzUuZZWdAANJGFzSW5zdGFuY2VPZnNxAH4ADFTZWD90AAxwcm9kdWN0QXJpdHlzcQB+AAy3v3UTdAAGZXF1YWxzc3EAfgAMbJZZuHQAIXBhdHRlcm5NYXRjaGluZ0JldHdlZW5Eb2dzQW5kQ2F0c3NxAH4ADAgyE2B0AAxhc0luc3RhbmNlT2ZzcQB+AAzvOSOzdAARY2F0VG9Eb2dFeHRyYWN0b3JzcQB+AAzU8mutdAAMc3luY2hyb25pemVkc3EAfgAMP8FDLXQAI1BhdHRlcm5NYXRjaGluZ0RpZmZlcmVudENhc2VDbGFzc2Vzc3EAfgAMUThI43QADSRpc0luc3RhbmNlT2ZzcQB+AAyJnzWvdAArcGF0dGVybk1hdGNoaW5nQmV0d2VlbkRvZ3NBbmRDYXRzUmVmYWN0b3JlZHNxAH4ADHjLffZ0AAhjYW5FcXVhbHNxAH4ADDQa4Tx0AA5jb3B5JGRlZmF1bHQkNHNxAH4ADPfzGGR0AA1wcm9kdWN0UHJlZml4c3EAfgAMPu01QnQACW5vdGlmeUFsbHNxAH4ADDya6qF0AANDYXRzcQB+AAy86xrvdAAMaXNJbnN0YW5jZU9mc3EAfgAMATbfyXQABjxpbml0PnNxAH4ADFq7spB0AANEb2dzcQB+AAw5WCJsdAANY2FuRmV0Y2hBQmFsbHNxAH4ADDmvFaB0AAI9PXNxAH4ADEWnmX50AAZoYXNGdXJzcQB+AAzZra0udAAFY2xvbmVzcQB+AAzKzMvVdAAGY29sb3Vyc3EAfgAM1migoHQABWJyZWVkc3EAfgAMOPXGLHQABiRpbml0JHNxAH4ADNtNRtd0AA5jb3B5JGRlZmF1bHQkM3NxAH4ADCJPUFp0AARjb3B5c3EAfgAM9bsd6nQACHRvU3RyaW5nc3EAfgAMNKvw43QAAiE9c3EAfgAMWz28tHQACGdldENsYXNzc3EAfgAMkX4m4XQADmNvcHkkZGVmYXVsdCQxc3EAfgAMG0UMTXQAAm5lc3EAfgAMhDvM23QAAmVxc3EAfgAM6RU8wnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADNaHU990AAIjI3NxAH4ADM4sWSt0AAhmaW5hbGl6ZXNxAH4ADJNbBMJ0AA5wcm9kdWN0RWxlbWVudHNxAH4ADBBZfwt0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAARzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4AJXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AgnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBrTAAJaW5oZXJpdGVkcQB+AGtMAAdwYXJlbnRzcQB+AGt4cQB+AIdzcQB+AIJ1cQB+AGYAAAAAc3EAfgCCdXEAfgBmAAAAAHNxAH4AgnVyABFb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
User -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwtpv9LQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwIN27u3QABm5vdGlmeXNxAH4ADEWSUeh0AAd1bmFwcGx5c3EAfgAMkN9uQ3QABHdhaXRzcQB+AAzBzRt0dAAOY29weSRkZWZhdWx0JDJzcQB+AAxa3xtQdAANJGFzSW5zdGFuY2VPZnNxAH4ADAAGCN50AA5jb3B5JGRlZmF1bHQkNXNxAH4ADP9snut0AAxwcm9kdWN0QXJpdHlzcQB+AAwHUje9dAAGZXF1YWxzc3EAfgAMKmBMgHQADGFzSW5zdGFuY2VPZnNxAH4ADDv3HtB0ABhVc2VyV2l0aE92ZXJyaWRlZFVuYXBwbHlzcQB+AAyv1JmrdAAMc3luY2hyb25pemVkc3EAfgAMl++u03QAB2F3ZXNvbWVzcQB+AAyJzlAndAANJGlzSW5zdGFuY2VPZnNxAH4ADJHV65Z0AAl1c2VyRW1haWxzcQB+AAybGv+ldAAIY2FuRXF1YWxzcQB+AAzrrrQEdAAOY29weSRkZWZhdWx0JDRzcQB+AAw+djxZdAANcHJvZHVjdFByZWZpeHNxAH4ADAk/uxJ0AANhZ2VzcQB+AAxID7yCdAAJbm90aWZ5QWxsc3EAfgAMoTM+4nQADGlzSW5zdGFuY2VPZnNxAH4ADBM+Wwt0AAhsYXN0TmFtZXNxAH4ADK8vXYF0AAlmaXJzdE5hbWVzcQB+AAwo8BeedAAGPGluaXQ+c3EAfgAM89PwP3QABWFwcGx5c3EAfgAMU6YORHQAAj09c3EAfgAMH2bHinQABWNsb25lc3EAfgAMeSKLfXQABiRpbml0JHNxAH4ADJKSwsl0AARVc2Vyc3EAfgAMM8bzTHQADmNvcHkkZGVmYXVsdCQzc3EAfgAMVrFarXQABGNvcHlzcQB+AAy3UTaldAAIdG9TdHJpbmdzcQB+AAxlyewadAACIT1zcQB+AAx7xcyldAAIZ2V0Q2xhc3NzcQB+AAz3lQwzdAAOY29weSRkZWZhdWx0JDFzcQB+AAw3+PledAACbmVzcQB+AAzz6pPndAACZXFzcQB+AAy+9yfFdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAM0RHcg3QAAiMjc3EAfgAM11EPQ3QACGZpbmFsaXplc3EAfgAM8w9fcHQADnByb2R1Y3RFbGVtZW50c3EAfgAMoOj8JXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgBFdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCFc3EAfgCAdXEAfgBkAAAAAHNxAH4AgHVxAH4AZAAAAABzcQB+AIB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4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
User$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwtpv9LQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwIN27u3QABm5vdGlmeXNxAH4ADEWSUeh0AAd1bmFwcGx5c3EAfgAMkN9uQ3QABHdhaXRzcQB+AAzBzRt0dAAOY29weSRkZWZhdWx0JDJzcQB+AAxa3xtQdAANJGFzSW5zdGFuY2VPZnNxAH4ADAAGCN50AA5jb3B5JGRlZmF1bHQkNXNxAH4ADP9snut0AAxwcm9kdWN0QXJpdHlzcQB+AAwHUje9dAAGZXF1YWxzc3EAfgAMKmBMgHQADGFzSW5zdGFuY2VPZnNxAH4ADDv3HtB0ABhVc2VyV2l0aE92ZXJyaWRlZFVuYXBwbHlzcQB+AAyv1JmrdAAMc3luY2hyb25pemVkc3EAfgAMl++u03QAB2F3ZXNvbWVzcQB+AAyJzlAndAANJGlzSW5zdGFuY2VPZnNxAH4ADJHV65Z0AAl1c2VyRW1haWxzcQB+AAybGv+ldAAIY2FuRXF1YWxzcQB+AAzrrrQEdAAOY29weSRkZWZhdWx0JDRzcQB+AAw+djxZdAANcHJvZHVjdFByZWZpeHNxAH4ADAk/uxJ0AANhZ2VzcQB+AAxID7yCdAAJbm90aWZ5QWxsc3EAfgAMoTM+4nQADGlzSW5zdGFuY2VPZnNxAH4ADBM+Wwt0AAhsYXN0TmFtZXNxAH4ADK8vXYF0AAlmaXJzdE5hbWVzcQB+AAwo8BeedAAGPGluaXQ+c3EAfgAM89PwP3QABWFwcGx5c3EAfgAMU6YORHQAAj09c3EAfgAMH2bHinQABWNsb25lc3EAfgAMeSKLfXQABiRpbml0JHNxAH4ADJKSwsl0AARVc2Vyc3EAfgAMM8bzTHQADmNvcHkkZGVmYXVsdCQzc3EAfgAMVrFarXQABGNvcHlzcQB+AAy3UTaldAAIdG9TdHJpbmdzcQB+AAxlyewadAACIT1zcQB+AAx7xcyldAAIZ2V0Q2xhc3NzcQB+AAz3lQwzdAAOY29weSRkZWZhdWx0JDFzcQB+AAw3+PledAACbmVzcQB+AAzz6pPndAACZXFzcQB+AAy+9yfFdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAM0RHcg3QAAiMjc3EAfgAM11EPQ3QACGZpbmFsaXplc3EAfgAM8w9fcHQADnByb2R1Y3RFbGVtZW50c3EAfgAMoOj8JXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgBFdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCFc3EAfgCAdXEAfgBkAAAAAHNxAH4AgHVxAH4AZAAAAABzcQB+AIB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4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
UserWithOverridedUnapply -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwtpv9LQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwIN27u3QABm5vdGlmeXNxAH4ADEWSUeh0AAd1bmFwcGx5c3EAfgAMkN9uQ3QABHdhaXRzcQB+AAzBzRt0dAAOY29weSRkZWZhdWx0JDJzcQB+AAxa3xtQdAANJGFzSW5zdGFuY2VPZnNxAH4ADAAGCN50AA5jb3B5JGRlZmF1bHQkNXNxAH4ADP9snut0AAxwcm9kdWN0QXJpdHlzcQB+AAwHUje9dAAGZXF1YWxzc3EAfgAMKmBMgHQADGFzSW5zdGFuY2VPZnNxAH4ADDv3HtB0ABhVc2VyV2l0aE92ZXJyaWRlZFVuYXBwbHlzcQB+AAyv1JmrdAAMc3luY2hyb25pemVkc3EAfgAMl++u03QAB2F3ZXNvbWVzcQB+AAyJzlAndAANJGlzSW5zdGFuY2VPZnNxAH4ADJHV65Z0AAl1c2VyRW1haWxzcQB+AAybGv+ldAAIY2FuRXF1YWxzcQB+AAzrrrQEdAAOY29weSRkZWZhdWx0JDRzcQB+AAw+djxZdAANcHJvZHVjdFByZWZpeHNxAH4ADAk/uxJ0AANhZ2VzcQB+AAxID7yCdAAJbm90aWZ5QWxsc3EAfgAMoTM+4nQADGlzSW5zdGFuY2VPZnNxAH4ADBM+Wwt0AAhsYXN0TmFtZXNxAH4ADK8vXYF0AAlmaXJzdE5hbWVzcQB+AAwo8BeedAAGPGluaXQ+c3EAfgAM89PwP3QABWFwcGx5c3EAfgAMU6YORHQAAj09c3EAfgAMH2bHinQABWNsb25lc3EAfgAMeSKLfXQABiRpbml0JHNxAH4ADJKSwsl0AARVc2Vyc3EAfgAMM8bzTHQADmNvcHkkZGVmYXVsdCQzc3EAfgAMVrFarXQABGNvcHlzcQB+AAy3UTaldAAIdG9TdHJpbmdzcQB+AAxlyewadAACIT1zcQB+AAx7xcyldAAIZ2V0Q2xhc3NzcQB+AAz3lQwzdAAOY29weSRkZWZhdWx0JDFzcQB+AAw3+PledAACbmVzcQB+AAzz6pPndAACZXFzcQB+AAy+9yfFdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAM0RHcg3QAAiMjc3EAfgAM11EPQ3QACGZpbmFsaXplc3EAfgAM8w9fcHQADnByb2R1Y3RFbGVtZW50c3EAfgAMoOj8JXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgBFdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCFc3EAfgCAdXEAfgBkAAAAAHNxAH4AgHVxAH4AZAAAAABzcQB+AIB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AIR0AAxTZXJpYWxpemFibGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AIRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJ5zcQB+AJFxAH4AlHNxAH4AlXNxAH4AmHVxAH4AmwAAAANzcQB+AJ10AARqYXZhc3EAfgCddAACaW9xAH4AonNxAH4AkXQAB1Byb2R1Y3RxAH4Al3NxAH4AkXQABkVxdWFsc3EAfgCXc3EAfgCRdAAGT2JqZWN0c3EAfgCVc3EAfgCYdXEAfgCbAAAAA3NxAH4AnXEAfgCoc3EAfgCddAAEbGFuZ3EAfgCic3EAfgCRdAADQW55cQB+AJdzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAcQB+ACF1cQB+AHgAAAAAcQB+AHx1cQB+AH4AAAAAc3EAfgCAcQB+AIZzcQB+AIBzcQB+AIhzcQB+AIB1cQB+AGQAAAAAc3EAfgCAdXEAfgBkAAAAAHNxAH4AgHVxAH4AjwAAAAZzcQB+AJFxAH4AlHNxAH4AlXNxAH4AmHVxAH4AmwAAAAJzcQB+AJ1xAH4AoHEAfgCic3EAfgCRcQB+AJRzcQB+AJVzcQB+AJh1cQB+AJsAAAADc3EAfgCdcQB+AKhzcQB+AJ10AAJpb3EAfgCic3EAfgCRcQB+AKxxAH4AyHNxAH4AkXQABkVxdWFsc3EAfgDIc3EAfgCRcQB+ALBzcQB+AJVzcQB+AJh1cQB+AJsAAAADc3EAfgCdcQB+AKhzcQB+AJ1xAH4AtnEAfgCic3EAfgCRcQB+ALhxAH4AyHNxAH4AZnEAfgBzdXEAfgB0AAAAAHNxAH4AdgB0ABhVc2VyV2l0aE92ZXJyaWRlZFVuYXBwbHl1cQB+AHgAAAAAfnEAfgB6dAAGTW9kdWxldXEAfgB+AAAAAHNxAH4AgHEAfgCGc3EAfgCAc3EAfgCIc3EAfgCAdXEAfgBkAAAAAHNxAH4AgHVxAH4AZAAAAABzcQB+AIB1cQB+AI8AAAAEc3EAfgCRcQB+AJRzcQB+AJVzcQB+AJh1cQB+AJsAAAACc3EAfgCdcQB+AKBxAH4AonNxAH4AkXEAfgCUc3EAfgCVc3EAfgCYdXEAfgCbAAAAA3NxAH4AnXEAfgCoc3EAfgCddAACaW9xAH4AonNxAH4AkXEAfgCwc3EAfgCVc3EAfgCYdXEAfgCbAAAAA3NxAH4AnXEAfgCoc3EAfgCdcQB+ALZxAH4AonNxAH4AkXEAfgC4cQB+AO91cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXp/uRoN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL2NoaWxsL3BheWUvRXh0cmFjdG9yc0FuZFBhdHRlck1hdGNoaW5nL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQ2rnshqkMxT6MtqTlvlXGv8lFfrQ==
UserWithOverridedUnapply$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwtpv9LQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwIN27u3QABm5vdGlmeXNxAH4ADEWSUeh0AAd1bmFwcGx5c3EAfgAMkN9uQ3QABHdhaXRzcQB+AAzBzRt0dAAOY29weSRkZWZhdWx0JDJzcQB+AAxa3xtQdAANJGFzSW5zdGFuY2VPZnNxAH4ADAAGCN50AA5jb3B5JGRlZmF1bHQkNXNxAH4ADP9snut0AAxwcm9kdWN0QXJpdHlzcQB+AAwHUje9dAAGZXF1YWxzc3EAfgAMKmBMgHQADGFzSW5zdGFuY2VPZnNxAH4ADDv3HtB0ABhVc2VyV2l0aE92ZXJyaWRlZFVuYXBwbHlzcQB+AAyv1JmrdAAMc3luY2hyb25pemVkc3EAfgAMl++u03QAB2F3ZXNvbWVzcQB+AAyJzlAndAANJGlzSW5zdGFuY2VPZnNxAH4ADJHV65Z0AAl1c2VyRW1haWxzcQB+AAybGv+ldAAIY2FuRXF1YWxzcQB+AAzrrrQEdAAOY29weSRkZWZhdWx0JDRzcQB+AAw+djxZdAANcHJvZHVjdFByZWZpeHNxAH4ADAk/uxJ0AANhZ2VzcQB+AAxID7yCdAAJbm90aWZ5QWxsc3EAfgAMoTM+4nQADGlzSW5zdGFuY2VPZnNxAH4ADBM+Wwt0AAhsYXN0TmFtZXNxAH4ADK8vXYF0AAlmaXJzdE5hbWVzcQB+AAwo8BeedAAGPGluaXQ+c3EAfgAM89PwP3QABWFwcGx5c3EAfgAMU6YORHQAAj09c3EAfgAMH2bHinQABWNsb25lc3EAfgAMeSKLfXQABiRpbml0JHNxAH4ADJKSwsl0AARVc2Vyc3EAfgAMM8bzTHQADmNvcHkkZGVmYXVsdCQzc3EAfgAMVrFarXQABGNvcHlzcQB+AAy3UTaldAAIdG9TdHJpbmdzcQB+AAxlyewadAACIT1zcQB+AAx7xcyldAAIZ2V0Q2xhc3NzcQB+AAz3lQwzdAAOY29weSRkZWZhdWx0JDFzcQB+AAw3+PledAACbmVzcQB+AAzz6pPndAACZXFzcQB+AAy+9yfFdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAM0RHcg3QAAiMjc3EAfgAM11EPQ3QACGZpbmFsaXplc3EAfgAM8w9fcHQADnByb2R1Y3RFbGVtZW50c3EAfgAMoOj8JXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgBFdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCFc3EAfgCAdXEAfgBkAAAAAHNxAH4AgHVxAH4AZAAAAABzcQB+AIB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4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
isEven$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwJA1nswAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hweyQWe3QABm5vdGlmeXNxAH4ADFl7mr50AAd1bmFwcGx5c3EAfgAMoolk+nQABHdhaXRzcQB+AAxjGsGidAANJGFzSW5zdGFuY2VPZnNxAH4ADE2Htm10AAZlcXVhbHNzcQB+AAwEqPpOdAAMYXNJbnN0YW5jZU9mc3EAfgAMyKGl43QADHN5bmNocm9uaXplZHNxAH4ADNVPZGR0AA0kaXNJbnN0YW5jZU9mc3EAfgAMOWYlr3QACW5vdGlmeUFsbHNxAH4ADE7sMTN0AAxpc0luc3RhbmNlT2ZzcQB+AAwcrmoRdAAFaXNPZGRzcQB+AAxtR/AYdAACPT1zcQB+AAxssrL3dAAFY2xvbmVzcQB+AAxv6Q6OdAAIdG9TdHJpbmdzcQB+AAySmlI1dAACIT1zcQB+AAx8n3PpdAAIZ2V0Q2xhc3NzcQB+AAxl4GgsdAACbmVzcQB+AAwC2m2vdAACZXFzcQB+AAzz9Yn9dAACIyNzcQB+AAybwp07dAAIZmluYWxpemVzcQB+AAyCccz8dAAIaGFzaENvZGVzcQB+AAwvTNZhdAAGaXNFdmVuc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgAjdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBac3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AX3NxAH4AWnVxAH4APgAAAABzcQB+AFp1cQB+AD4AAAAAc3EAfgBadXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBedAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBec3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB3dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB4c3EAfgBrdAADQW55c3EAfgBvc3EAfgBydXEAfgB1AAAAAnNxAH4Ad3QABXNjYWxhcQB+AH5zcQB+AEBxAH4ATXVxAH4ATgAAAABzcQB+AFAAcQB+ADl1cQB+AFIAAAAAcQB+AFZ1cQB+AFgAAAAAc3EAfgBacQB+AGBzcQB+AFpzcQB+AGJzcQB+AFp1cQB+AD4AAAAAc3EAfgBadXEAfgA+AAAAAHNxAH4AWnVxAH4AaQAAAAJzcQB+AGtxAH4AbnNxAH4Ab3NxAH4AcnVxAH4AdQAAAANzcQB+AHdxAH4AenNxAH4Ad3EAfgB8cQB+AH5zcQB+AGtxAH4AgHNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHdxAH4AhXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV6f7kaDdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARy9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUJh/bokc22IthMM1prWi/RsBXgkQ=
isOdd$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwJA1nswAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hweyQWe3QABm5vdGlmeXNxAH4ADFl7mr50AAd1bmFwcGx5c3EAfgAMoolk+nQABHdhaXRzcQB+AAxjGsGidAANJGFzSW5zdGFuY2VPZnNxAH4ADE2Htm10AAZlcXVhbHNzcQB+AAwEqPpOdAAMYXNJbnN0YW5jZU9mc3EAfgAMyKGl43QADHN5bmNocm9uaXplZHNxAH4ADNVPZGR0AA0kaXNJbnN0YW5jZU9mc3EAfgAMOWYlr3QACW5vdGlmeUFsbHNxAH4ADE7sMTN0AAxpc0luc3RhbmNlT2ZzcQB+AAwcrmoRdAAFaXNPZGRzcQB+AAxtR/AYdAACPT1zcQB+AAxssrL3dAAFY2xvbmVzcQB+AAxv6Q6OdAAIdG9TdHJpbmdzcQB+AAySmlI1dAACIT1zcQB+AAx8n3PpdAAIZ2V0Q2xhc3NzcQB+AAxl4GgsdAACbmVzcQB+AAwC2m2vdAACZXFzcQB+AAzz9Yn9dAACIyNzcQB+AAybwp07dAAIZmluYWxpemVzcQB+AAyCccz8dAAIaGFzaENvZGVzcQB+AAwvTNZhdAAGaXNFdmVuc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgAjdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBac3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AX3NxAH4AWnVxAH4APgAAAABzcQB+AFp1cQB+AD4AAAAAc3EAfgBadXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBedAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBec3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB3dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB4c3EAfgBrdAADQW55c3EAfgBvc3EAfgBydXEAfgB1AAAAAnNxAH4Ad3QABXNjYWxhcQB+AH5zcQB+AEBxAH4ATXVxAH4ATgAAAABzcQB+AFAAcQB+ADl1cQB+AFIAAAAAcQB+AFZ1cQB+AFgAAAAAc3EAfgBacQB+AGBzcQB+AFpzcQB+AGJzcQB+AFp1cQB+AD4AAAAAc3EAfgBadXEAfgA+AAAAAHNxAH4AWnVxAH4AaQAAAAJzcQB+AGtxAH4AbnNxAH4Ab3NxAH4AcnVxAH4AdQAAAANzcQB+AHdxAH4AenNxAH4Ad3EAfgB8cQB+AH5zcQB+AGtxAH4AgHNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHdxAH4AhXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV6f7kaDdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARy9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUJh/bokc22IthMM1prWi/RsBXgkQ=
source infos:
4 items
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/ExtractorOnUserMatchingSpec.scala -> 
AAAAAQAAAQAAACkAIyAgICAgIFVzZXIudW5hcHBseShuZXdVc2VyKSBtYXRjaCB7AQAABQYBAAAAEgEAEiAgICAgICAgICAgICAgICAgIAEAXi9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy9zcmMvdGVzdC9zY2FsYS9FeHRyYWN0b3JPblVzZXJNYXRjaGluZ1NwZWMuc2NhbGEBAF4vVXNlcnMvY2hpbGwvcGF5ZS9FeHRyYWN0b3JzQW5kUGF0dGVyTWF0Y2hpbmcvc3JjL3Rlc3Qvc2NhbGEvRXh0cmFjdG9yT25Vc2VyTWF0Y2hpbmdTcGVjLnNjYWxhAEdtYXRjaCBtYXkgbm90IGJlIGV4aGF1c3RpdmUuCkl0IHdvdWxkIGZhaWwgb24gdGhlIGZvbGxvd2luZyBpbnB1dDogTm9uZQEAAAAA
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/IsOddIsEvenSpec.scala -> 
AAAAAAAAAAA=
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/PatternMatchingBetweenCaseClassesDogAndCatSpec.scala -> 
AAAAAAAAAAA=
/Users/chill/paye/ExtractorsAndPatterMatching/src/test/scala/UserSpec.scala -> 
AAAAAAAAAAA=
compilations:
5 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXpo3HPd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXpo4K0V1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXpo4c/x1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXpq1a5l1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXp/uVzh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy9jaGlsbC9wYXllL0V4dHJhY3RvcnNBbmRQYXR0ZXJNYXRjaGluZy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
